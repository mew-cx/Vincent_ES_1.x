State 308 contains 1 shift/reduce conflict.

Grammar
rule 1    variable_identifier -> IDENTIFIER
rule 2    primary_expression -> variable_identifier
rule 3    primary_expression -> INTCONSTANT
rule 4    primary_expression -> FLOATCONSTANT
rule 5    primary_expression -> BOOLCONSTANT
rule 6    primary_expression -> LEFT_PAREN expression RIGHT_PAREN
rule 7    postfix_expression -> primary_expression
rule 8    postfix_expression -> postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
rule 9    postfix_expression -> function_call
rule 10   postfix_expression -> postfix_expression DOT FIELD_SELECTION
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   integer_expression -> expression
rule 14   function_call -> function_call_or_method
rule 15   function_call_or_method -> function_call_generic
rule 16   function_call_or_method -> postfix_expression DOT function_call_generic
rule 17   function_call_generic -> function_call_header_with_parameters RIGHT_PAREN
rule 18   function_call_generic -> function_call_header_no_parameters RIGHT_PAREN
rule 19   function_call_header_no_parameters -> function_call_header VOID_TYPE
rule 20   function_call_header_no_parameters -> function_call_header
rule 21   function_call_header_with_parameters -> function_call_header assignment_expression
rule 22   function_call_header_with_parameters -> function_call_header_with_parameters COMMA assignment_expression
rule 23   function_call_header -> function_identifier LEFT_PAREN
rule 24   function_identifier -> type_specifier
rule 25   function_identifier -> IDENTIFIER
rule 26   function_identifier -> FIELD_SELECTION
rule 27   unary_expression -> postfix_expression
rule 28   unary_expression -> INC_OP unary_expression
rule 29   unary_expression -> DEC_OP unary_expression
rule 30   unary_expression -> unary_operator unary_expression
rule 31   unary_operator -> PLUS
rule 32   unary_operator -> DASH
rule 33   unary_operator -> BANG
rule 34   unary_operator -> TILDE
rule 35   multiplicative_expression -> unary_expression
rule 36   multiplicative_expression -> multiplicative_expression STAR unary_expression
rule 37   multiplicative_expression -> multiplicative_expression SLASH unary_expression
rule 38   multiplicative_expression -> multiplicative_expression PERCENT unary_expression
rule 39   additive_expression -> multiplicative_expression
rule 40   additive_expression -> additive_expression PLUS multiplicative_expression
rule 41   additive_expression -> additive_expression DASH multiplicative_expression
rule 42   shift_expression -> additive_expression
rule 43   shift_expression -> shift_expression LEFT_OP additive_expression
rule 44   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 45   relational_expression -> shift_expression
rule 46   relational_expression -> relational_expression LEFT_ANGLE shift_expression
rule 47   relational_expression -> relational_expression RIGHT_ANGLE shift_expression
rule 48   relational_expression -> relational_expression LE_OP shift_expression
rule 49   relational_expression -> relational_expression GE_OP shift_expression
rule 50   equality_expression -> relational_expression
rule 51   equality_expression -> equality_expression EQ_OP relational_expression
rule 52   equality_expression -> equality_expression NE_OP relational_expression
rule 53   and_expression -> equality_expression
rule 54   and_expression -> and_expression AMPERSAND equality_expression
rule 55   exclusive_or_expression -> and_expression
rule 56   exclusive_or_expression -> exclusive_or_expression CARET and_expression
rule 57   inclusive_or_expression -> exclusive_or_expression
rule 58   inclusive_or_expression -> inclusive_or_expression VERTICAL_BAR exclusive_or_expression
rule 59   logical_and_expression -> inclusive_or_expression
rule 60   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 61   logical_xor_expression -> logical_and_expression
rule 62   logical_xor_expression -> logical_xor_expression XOR_OP logical_and_expression
rule 63   logical_or_expression -> logical_xor_expression
rule 64   logical_or_expression -> logical_or_expression OR_OP logical_xor_expression
rule 65   conditional_expression -> logical_or_expression
rule 66   conditional_expression -> logical_or_expression QUESTION expression COLON assignment_expression
rule 67   assignment_expression -> conditional_expression
rule 68   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 69   assignment_operator -> EQUAL
rule 70   assignment_operator -> MUL_ASSIGN
rule 71   assignment_operator -> DIV_ASSIGN
rule 72   assignment_operator -> MOD_ASSIGN
rule 73   assignment_operator -> ADD_ASSIGN
rule 74   assignment_operator -> SUB_ASSIGN
rule 75   assignment_operator -> LEFT_ASSIGN
rule 76   assignment_operator -> RIGHT_ASSIGN
rule 77   assignment_operator -> AND_ASSIGN
rule 78   assignment_operator -> XOR_ASSIGN
rule 79   assignment_operator -> OR_ASSIGN
rule 80   expression -> assignment_expression
rule 81   expression -> expression COMMA assignment_expression
rule 82   constant_expression -> conditional_expression
rule 83   declaration -> function_prototype SEMICOLON
rule 84   declaration -> init_declarator_list SEMICOLON
rule 85   declaration -> PRECISION precision_qualifier type_specifier_nonarray_no_prec SEMICOLON
rule 86   function_prototype -> function_declarator RIGHT_PAREN
rule 87   function_declarator -> function_header
rule 88   function_declarator -> function_header_with_parameters
rule 89   function_header_with_parameters -> function_header parameter_declaration
rule 90   function_header_with_parameters -> function_header_with_parameters COMMA parameter_declaration
rule 91   function_header -> fully_specified_type IDENTIFIER LEFT_PAREN
rule 92   parameter_declarator -> type_specifier IDENTIFIER
rule 93   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 94   parameter_declaration -> type_qualifier parameter_qualifier parameter_declarator
rule 95   parameter_declaration -> parameter_qualifier parameter_declarator
rule 96   parameter_declaration -> type_qualifier parameter_qualifier parameter_type_specifier
rule 97   parameter_declaration -> parameter_qualifier parameter_type_specifier
rule 98   parameter_qualifier ->		/* empty */
rule 99   parameter_qualifier -> IN_QUAL
rule 100  parameter_qualifier -> OUT_QUAL
rule 101  parameter_qualifier -> INOUT_QUAL
rule 102  parameter_type_specifier -> type_specifier
rule 103  init_declarator_list -> single_declaration
rule 104  init_declarator_list -> init_declarator_list COMMA IDENTIFIER
rule 105  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET
rule 106  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 107  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer
rule 108  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer
rule 109  init_declarator_list -> init_declarator_list COMMA IDENTIFIER EQUAL initializer
rule 110  single_declaration -> fully_specified_type
rule 111  single_declaration -> fully_specified_type IDENTIFIER
rule 112  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET
rule 113  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 114  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer
rule 115  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer
rule 116  single_declaration -> fully_specified_type IDENTIFIER EQUAL initializer
rule 117  single_declaration -> INVARIANT IDENTIFIER
rule 118  fully_specified_type -> type_specifier
rule 119  fully_specified_type -> type_qualifier type_specifier
rule 120  type_qualifier -> CONST_QUAL
rule 121  type_qualifier -> ATTRIBUTE
rule 122  type_qualifier -> VARYING
rule 123  type_qualifier -> INVARIANT VARYING
rule 124  type_qualifier -> UNIFORM
rule 125  type_specifier -> type_specifier_nonarray
rule 126  type_specifier -> type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 127  type_specifier_nonarray -> type_specifier_nonarray_no_prec
rule 128  type_specifier_nonarray -> precision_qualifier type_specifier_nonarray_no_prec
rule 129  type_specifier_nonarray_no_prec -> VOID_TYPE
rule 130  type_specifier_nonarray_no_prec -> FLOAT_TYPE
rule 131  type_specifier_nonarray_no_prec -> INT_TYPE
rule 132  type_specifier_nonarray_no_prec -> BOOL_TYPE
rule 133  type_specifier_nonarray_no_prec -> VEC2
rule 134  type_specifier_nonarray_no_prec -> VEC3
rule 135  type_specifier_nonarray_no_prec -> VEC4
rule 136  type_specifier_nonarray_no_prec -> BVEC2
rule 137  type_specifier_nonarray_no_prec -> BVEC3
rule 138  type_specifier_nonarray_no_prec -> BVEC4
rule 139  type_specifier_nonarray_no_prec -> IVEC2
rule 140  type_specifier_nonarray_no_prec -> IVEC3
rule 141  type_specifier_nonarray_no_prec -> IVEC4
rule 142  type_specifier_nonarray_no_prec -> MATRIX2
rule 143  type_specifier_nonarray_no_prec -> MATRIX3
rule 144  type_specifier_nonarray_no_prec -> MATRIX4
rule 145  type_specifier_nonarray_no_prec -> SAMPLER1D
rule 146  type_specifier_nonarray_no_prec -> SAMPLER2D
rule 147  type_specifier_nonarray_no_prec -> SAMPLER3D
rule 148  type_specifier_nonarray_no_prec -> SAMPLERCUBE
rule 149  type_specifier_nonarray_no_prec -> SAMPLER1DSHADOW
rule 150  type_specifier_nonarray_no_prec -> SAMPLER2DSHADOW
rule 151  type_specifier_nonarray_no_prec -> SAMPLERRECTARB
rule 152  type_specifier_nonarray_no_prec -> SAMPLERRECTSHADOWARB
rule 153  type_specifier_nonarray_no_prec -> struct_specifier
rule 154  type_specifier_nonarray_no_prec -> TYPE_NAME
rule 155  precision_qualifier -> HIGH_PRECISION
rule 156  precision_qualifier -> MEDIUM_PRECISION
rule 157  precision_qualifier -> LOW_PRECISION
rule 158  struct_specifier -> STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 159  struct_specifier -> STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 160  struct_declaration_list -> struct_declaration
rule 161  struct_declaration_list -> struct_declaration_list struct_declaration
rule 162  struct_declaration -> type_specifier struct_declarator_list SEMICOLON
rule 163  struct_declarator_list -> struct_declarator
rule 164  struct_declarator_list -> struct_declarator_list COMMA struct_declarator
rule 165  struct_declarator -> IDENTIFIER
rule 166  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 167  initializer -> assignment_expression
rule 168  declaration_statement -> declaration
rule 169  statement -> compound_statement
rule 170  statement -> simple_statement
rule 171  simple_statement -> declaration_statement
rule 172  simple_statement -> expression_statement
rule 173  simple_statement -> selection_statement
rule 174  simple_statement -> iteration_statement
rule 175  simple_statement -> jump_statement
rule 176  compound_statement -> LEFT_BRACE RIGHT_BRACE
rule 177  @1 ->		/* empty */
rule 178  @2 ->		/* empty */
rule 179  compound_statement -> LEFT_BRACE @1 statement_list @2 RIGHT_BRACE
rule 180  statement_no_new_scope -> compound_statement_no_new_scope
rule 181  statement_no_new_scope -> simple_statement
rule 182  compound_statement_no_new_scope -> LEFT_BRACE RIGHT_BRACE
rule 183  compound_statement_no_new_scope -> LEFT_BRACE statement_list RIGHT_BRACE
rule 184  statement_list -> statement
rule 185  statement_list -> statement_list statement
rule 186  expression_statement -> SEMICOLON
rule 187  expression_statement -> expression SEMICOLON
rule 188  selection_statement -> IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
rule 189  selection_rest_statement -> statement ELSE statement
rule 190  selection_rest_statement -> statement
rule 191  condition -> expression
rule 192  condition -> fully_specified_type IDENTIFIER EQUAL initializer
rule 193  @3 ->		/* empty */
rule 194  iteration_statement -> WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope
rule 195  @4 ->		/* empty */
rule 196  iteration_statement -> DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
rule 197  @5 ->		/* empty */
rule 198  iteration_statement -> FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
rule 199  for_init_statement -> expression_statement
rule 200  for_init_statement -> declaration_statement
rule 201  conditionopt -> condition
rule 202  conditionopt ->		/* empty */
rule 203  for_rest_statement -> conditionopt SEMICOLON
rule 204  for_rest_statement -> conditionopt SEMICOLON expression
rule 205  jump_statement -> CONTINUE SEMICOLON
rule 206  jump_statement -> BREAK SEMICOLON
rule 207  jump_statement -> RETURN SEMICOLON
rule 208  jump_statement -> RETURN expression SEMICOLON
rule 209  jump_statement -> DISCARD SEMICOLON
rule 210  translation_unit -> external_declaration
rule 211  translation_unit -> translation_unit external_declaration
rule 212  external_declaration -> function_definition
rule 213  external_declaration -> declaration
rule 214  @6 ->		/* empty */
rule 215  function_definition -> function_prototype @6 compound_statement_no_new_scope

Terminals, with rules where they appear

$ (-1)
error (256)
ATTRIBUTE (258) 121
CONST_QUAL (259) 120
BOOL_TYPE (260) 132
FLOAT_TYPE (261) 130
INT_TYPE (262) 131
BREAK (263) 206
CONTINUE (264) 205
DO (265) 196
ELSE (266) 189
FOR (267) 198
IF (268) 188
DISCARD (269) 209
RETURN (270) 207 208
BVEC2 (271) 136
BVEC3 (272) 137
BVEC4 (273) 138
IVEC2 (274) 139
IVEC3 (275) 140
IVEC4 (276) 141
VEC2 (277) 133
VEC3 (278) 134
VEC4 (279) 135
MATRIX2 (280) 142
MATRIX3 (281) 143
MATRIX4 (282) 144
IN_QUAL (283) 99
OUT_QUAL (284) 100
INOUT_QUAL (285) 101
UNIFORM (286) 124
VARYING (287) 122 123
STRUCT (288) 158 159
VOID_TYPE (289) 19 129
WHILE (290) 194 196
SAMPLER1D (291) 145
SAMPLER2D (292) 146
SAMPLER3D (293) 147
SAMPLERCUBE (294) 148
SAMPLER1DSHADOW (295) 149
SAMPLER2DSHADOW (296) 150
SAMPLERRECTARB (297) 151
SAMPLERRECTSHADOWARB (298) 152
LOW_PRECISION (299) 157
MEDIUM_PRECISION (300) 156
HIGH_PRECISION (301) 155
INVARIANT (302) 117 123
PRECISION (303) 85
IDENTIFIER (304) 1 25 91 92 93 104 105 106 107 108 109 111 112 113
    114 115 116 117 158 165 166 192
TYPE_NAME (305) 154
FLOATCONSTANT (306) 4
INTCONSTANT (307) 3
BOOLCONSTANT (308) 5
FIELD_SELECTION (309) 10 26
LEFT_OP (310) 43
RIGHT_OP (311) 44
INC_OP (312) 11 28
DEC_OP (313) 12 29
LE_OP (314) 48
GE_OP (315) 49
EQ_OP (316) 51
NE_OP (317) 52
AND_OP (318) 60
OR_OP (319) 64
XOR_OP (320) 62
MUL_ASSIGN (321) 70
DIV_ASSIGN (322) 71
ADD_ASSIGN (323) 73
MOD_ASSIGN (324) 72
LEFT_ASSIGN (325) 75
RIGHT_ASSIGN (326) 76
AND_ASSIGN (327) 77
XOR_ASSIGN (328) 78
OR_ASSIGN (329) 79
SUB_ASSIGN (330) 74
LEFT_PAREN (331) 6 23 91 188 194 196 198
RIGHT_PAREN (332) 6 17 18 86 188 194 196 198
LEFT_BRACKET (333) 8 93 105 106 107 108 112 113 114 115 126 166
RIGHT_BRACKET (334) 8 93 105 106 107 108 112 113 114 115 126 166
LEFT_BRACE (335) 158 159 176 179 182 183
RIGHT_BRACE (336) 158 159 176 179 182 183
DOT (337) 10 16
COMMA (338) 22 81 90 104 105 106 107 108 109 164
COLON (339) 66
EQUAL (340) 69 107 108 109 114 115 116 192
SEMICOLON (341) 83 84 85 162 186 187 196 203 204 205 206 207 208 209
BANG (342) 33
DASH (343) 32 41
TILDE (344) 34
PLUS (345) 31 40
STAR (346) 36
SLASH (347) 37
PERCENT (348) 38
LEFT_ANGLE (349) 46
RIGHT_ANGLE (350) 47
VERTICAL_BAR (351) 58
CARET (352) 56
AMPERSAND (353) 54
QUESTION (354) 66

Nonterminals, with rules where they appear

variable_identifier (100)
    on left: 1, on right: 2
primary_expression (101)
    on left: 2 3 4 5 6, on right: 7
postfix_expression (102)
    on left: 7 8 9 10 11 12, on right: 8 10 11 12 16 27
integer_expression (103)
    on left: 13, on right: 8
function_call (104)
    on left: 14, on right: 9
function_call_or_method (105)
    on left: 15 16, on right: 14
function_call_generic (106)
    on left: 17 18, on right: 15 16
function_call_header_no_parameters (107)
    on left: 19 20, on right: 18
function_call_header_with_parameters (108)
    on left: 21 22, on right: 17 22
function_call_header (109)
    on left: 23, on right: 19 20 21
function_identifier (110)
    on left: 24 25 26, on right: 23
unary_expression (111)
    on left: 27 28 29 30, on right: 28 29 30 35 36 37 38 68
unary_operator (112)
    on left: 31 32 33 34, on right: 30
multiplicative_expression (113)
    on left: 35 36 37 38, on right: 36 37 38 39 40 41
additive_expression (114)
    on left: 39 40 41, on right: 40 41 42 43 44
shift_expression (115)
    on left: 42 43 44, on right: 43 44 45 46 47 48 49
relational_expression (116)
    on left: 45 46 47 48 49, on right: 46 47 48 49 50 51 52
equality_expression (117)
    on left: 50 51 52, on right: 51 52 53 54
and_expression (118)
    on left: 53 54, on right: 54 55 56
exclusive_or_expression (119)
    on left: 55 56, on right: 56 57 58
inclusive_or_expression (120)
    on left: 57 58, on right: 58 59 60
logical_and_expression (121)
    on left: 59 60, on right: 60 61 62
logical_xor_expression (122)
    on left: 61 62, on right: 62 63 64
logical_or_expression (123)
    on left: 63 64, on right: 64 65 66
conditional_expression (124)
    on left: 65 66, on right: 67 82
assignment_expression (125)
    on left: 67 68, on right: 21 22 66 68 80 81 167
assignment_operator (126)
    on left: 69 70 71 72 73 74 75 76 77 78 79, on right: 68
expression (127)
    on left: 80 81, on right: 6 13 66 81 187 188 191 196 204 208
constant_expression (128)
    on left: 82, on right: 93 106 108 113 115 126 166
declaration (129)
    on left: 83 84 85, on right: 168 213
function_prototype (130)
    on left: 86, on right: 83 215
function_declarator (131)
    on left: 87 88, on right: 86
function_header_with_parameters (132)
    on left: 89 90, on right: 88 90
function_header (133)
    on left: 91, on right: 87 89
parameter_declarator (134)
    on left: 92 93, on right: 94 95
parameter_declaration (135)
    on left: 94 95 96 97, on right: 89 90
parameter_qualifier (136)
    on left: 98 99 100 101, on right: 94 95 96 97
parameter_type_specifier (137)
    on left: 102, on right: 96 97
init_declarator_list (138)
    on left: 103 104 105 106 107 108 109, on right: 84 104 105 106
    107 108 109
single_declaration (139)
    on left: 110 111 112 113 114 115 116 117, on right: 103
fully_specified_type (140)
    on left: 118 119, on right: 91 110 111 112 113 114 115 116 192
type_qualifier (141)
    on left: 120 121 122 123 124, on right: 94 96 119
type_specifier (142)
    on left: 125 126, on right: 24 92 93 102 118 119 162
type_specifier_nonarray (143)
    on left: 127 128, on right: 125 126
type_specifier_nonarray_no_prec (144)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142
    143 144 145 146 147 148 149 150 151 152 153 154,
    on right: 85 127 128
precision_qualifier (145)
    on left: 155 156 157, on right: 85 128
struct_specifier (146)
    on left: 158 159, on right: 153
struct_declaration_list (147)
    on left: 160 161, on right: 158 159 161
struct_declaration (148)
    on left: 162, on right: 160 161
struct_declarator_list (149)
    on left: 163 164, on right: 162 164
struct_declarator (150)
    on left: 165 166, on right: 163 164
initializer (151)
    on left: 167, on right: 107 108 109 114 115 116 192
declaration_statement (152)
    on left: 168, on right: 171 200
statement (153)
    on left: 169 170, on right: 184 185 189 190 196
simple_statement (154)
    on left: 171 172 173 174 175, on right: 170 181
compound_statement (155)
    on left: 176 179, on right: 169
@1 (156)
    on left: 177, on right: 179
@2 (157)
    on left: 178, on right: 179
statement_no_new_scope (158)
    on left: 180 181, on right: 194 198
compound_statement_no_new_scope (159)
    on left: 182 183, on right: 180 215
statement_list (160)
    on left: 184 185, on right: 179 183 185
expression_statement (161)
    on left: 186 187, on right: 172 199
selection_statement (162)
    on left: 188, on right: 173
selection_rest_statement (163)
    on left: 189 190, on right: 188
condition (164)
    on left: 191 192, on right: 194 201
iteration_statement (165)
    on left: 194 196 198, on right: 174
@3 (166)
    on left: 193, on right: 194
@4 (167)
    on left: 195, on right: 196
@5 (168)
    on left: 197, on right: 198
for_init_statement (169)
    on left: 199 200, on right: 198
conditionopt (170)
    on left: 201 202, on right: 203 204
for_rest_statement (171)
    on left: 203 204, on right: 198
jump_statement (172)
    on left: 205 206 207 208 209, on right: 175
translation_unit (173)
    on left: 210 211, on right: 211
external_declaration (174)
    on left: 212 213, on right: 210 211
function_definition (175)
    on left: 215, on right: 212
@6 (176)
    on left: 214, on right: 215


state 0

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    TYPE_NAME	shift, and go to state 35

    declaration	go to state 36
    function_prototype	go to state 37
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 45
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    translation_unit	go to state 50
    external_declaration	go to state 51
    function_definition	go to state 52



state 1

    type_qualifier  ->  ATTRIBUTE .   (rule 121)

    $default	reduce using rule 121 (type_qualifier)



state 2

    type_qualifier  ->  CONST_QUAL .   (rule 120)

    $default	reduce using rule 120 (type_qualifier)



state 3

    type_specifier_nonarray_no_prec  ->  BOOL_TYPE .   (rule 132)

    $default	reduce using rule 132 (type_specifier_nonarray_no_prec)



state 4

    type_specifier_nonarray_no_prec  ->  FLOAT_TYPE .   (rule 130)

    $default	reduce using rule 130 (type_specifier_nonarray_no_prec)



state 5

    type_specifier_nonarray_no_prec  ->  INT_TYPE .   (rule 131)

    $default	reduce using rule 131 (type_specifier_nonarray_no_prec)



state 6

    type_specifier_nonarray_no_prec  ->  BVEC2 .   (rule 136)

    $default	reduce using rule 136 (type_specifier_nonarray_no_prec)



state 7

    type_specifier_nonarray_no_prec  ->  BVEC3 .   (rule 137)

    $default	reduce using rule 137 (type_specifier_nonarray_no_prec)



state 8

    type_specifier_nonarray_no_prec  ->  BVEC4 .   (rule 138)

    $default	reduce using rule 138 (type_specifier_nonarray_no_prec)



state 9

    type_specifier_nonarray_no_prec  ->  IVEC2 .   (rule 139)

    $default	reduce using rule 139 (type_specifier_nonarray_no_prec)



state 10

    type_specifier_nonarray_no_prec  ->  IVEC3 .   (rule 140)

    $default	reduce using rule 140 (type_specifier_nonarray_no_prec)



state 11

    type_specifier_nonarray_no_prec  ->  IVEC4 .   (rule 141)

    $default	reduce using rule 141 (type_specifier_nonarray_no_prec)



state 12

    type_specifier_nonarray_no_prec  ->  VEC2 .   (rule 133)

    $default	reduce using rule 133 (type_specifier_nonarray_no_prec)



state 13

    type_specifier_nonarray_no_prec  ->  VEC3 .   (rule 134)

    $default	reduce using rule 134 (type_specifier_nonarray_no_prec)



state 14

    type_specifier_nonarray_no_prec  ->  VEC4 .   (rule 135)

    $default	reduce using rule 135 (type_specifier_nonarray_no_prec)



state 15

    type_specifier_nonarray_no_prec  ->  MATRIX2 .   (rule 142)

    $default	reduce using rule 142 (type_specifier_nonarray_no_prec)



state 16

    type_specifier_nonarray_no_prec  ->  MATRIX3 .   (rule 143)

    $default	reduce using rule 143 (type_specifier_nonarray_no_prec)



state 17

    type_specifier_nonarray_no_prec  ->  MATRIX4 .   (rule 144)

    $default	reduce using rule 144 (type_specifier_nonarray_no_prec)



state 18

    type_qualifier  ->  UNIFORM .   (rule 124)

    $default	reduce using rule 124 (type_qualifier)



state 19

    type_qualifier  ->  VARYING .   (rule 122)

    $default	reduce using rule 122 (type_qualifier)



state 20

    struct_specifier  ->  STRUCT . IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 158)
    struct_specifier  ->  STRUCT . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 159)

    IDENTIFIER	shift, and go to state 53
    LEFT_BRACE	shift, and go to state 54



state 21

    type_specifier_nonarray_no_prec  ->  VOID_TYPE .   (rule 129)

    $default	reduce using rule 129 (type_specifier_nonarray_no_prec)



state 22

    type_specifier_nonarray_no_prec  ->  SAMPLER1D .   (rule 145)

    $default	reduce using rule 145 (type_specifier_nonarray_no_prec)



state 23

    type_specifier_nonarray_no_prec  ->  SAMPLER2D .   (rule 146)

    $default	reduce using rule 146 (type_specifier_nonarray_no_prec)



state 24

    type_specifier_nonarray_no_prec  ->  SAMPLER3D .   (rule 147)

    $default	reduce using rule 147 (type_specifier_nonarray_no_prec)



state 25

    type_specifier_nonarray_no_prec  ->  SAMPLERCUBE .   (rule 148)

    $default	reduce using rule 148 (type_specifier_nonarray_no_prec)



state 26

    type_specifier_nonarray_no_prec  ->  SAMPLER1DSHADOW .   (rule 149)

    $default	reduce using rule 149 (type_specifier_nonarray_no_prec)



state 27

    type_specifier_nonarray_no_prec  ->  SAMPLER2DSHADOW .   (rule 150)

    $default	reduce using rule 150 (type_specifier_nonarray_no_prec)



state 28

    type_specifier_nonarray_no_prec  ->  SAMPLERRECTARB .   (rule 151)

    $default	reduce using rule 151 (type_specifier_nonarray_no_prec)



state 29

    type_specifier_nonarray_no_prec  ->  SAMPLERRECTSHADOWARB .   (rule 152)

    $default	reduce using rule 152 (type_specifier_nonarray_no_prec)



state 30

    precision_qualifier  ->  LOW_PRECISION .   (rule 157)

    $default	reduce using rule 157 (precision_qualifier)



state 31

    precision_qualifier  ->  MEDIUM_PRECISION .   (rule 156)

    $default	reduce using rule 156 (precision_qualifier)



state 32

    precision_qualifier  ->  HIGH_PRECISION .   (rule 155)

    $default	reduce using rule 155 (precision_qualifier)



state 33

    single_declaration  ->  INVARIANT . IDENTIFIER   (rule 117)
    type_qualifier  ->  INVARIANT . VARYING   (rule 123)

    VARYING	shift, and go to state 55
    IDENTIFIER	shift, and go to state 56



state 34

    declaration  ->  PRECISION . precision_qualifier type_specifier_nonarray_no_prec SEMICOLON   (rule 85)

    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32

    precision_qualifier	go to state 57



state 35

    type_specifier_nonarray_no_prec  ->  TYPE_NAME .   (rule 154)

    $default	reduce using rule 154 (type_specifier_nonarray_no_prec)



state 36

    external_declaration  ->  declaration .   (rule 213)

    $default	reduce using rule 213 (external_declaration)



state 37

    declaration  ->  function_prototype . SEMICOLON   (rule 83)
    function_definition  ->  function_prototype . @6 compound_statement_no_new_scope   (rule 215)

    SEMICOLON	shift, and go to state 58

    $default	reduce using rule 214 (@6)

    @6  	go to state 59



state 38

    function_prototype  ->  function_declarator . RIGHT_PAREN   (rule 86)

    RIGHT_PAREN	shift, and go to state 60



state 39

    function_declarator  ->  function_header_with_parameters .   (rule 88)
    function_header_with_parameters  ->  function_header_with_parameters . COMMA parameter_declaration   (rule 90)

    COMMA	shift, and go to state 61

    $default	reduce using rule 88 (function_declarator)



state 40

    function_declarator  ->  function_header .   (rule 87)
    function_header_with_parameters  ->  function_header . parameter_declaration   (rule 89)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 62
    OUT_QUAL	shift, and go to state 63
    INOUT_QUAL	shift, and go to state 64
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    INVARIANT	shift, and go to state 65

    RIGHT_PAREN	reduce using rule 87 (function_declarator)
    $default	reduce using rule 98 (parameter_qualifier)

    parameter_declaration	go to state 66
    parameter_qualifier	go to state 67
    type_qualifier	go to state 68



state 41

    declaration  ->  init_declarator_list . SEMICOLON   (rule 84)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER   (rule 104)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 106)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 108)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER EQUAL initializer   (rule 109)

    COMMA	shift, and go to state 69
    SEMICOLON	shift, and go to state 70



state 42

    init_declarator_list  ->  single_declaration .   (rule 103)

    $default	reduce using rule 103 (init_declarator_list)



state 43

    function_header  ->  fully_specified_type . IDENTIFIER LEFT_PAREN   (rule 91)
    single_declaration  ->  fully_specified_type .   (rule 110)
    single_declaration  ->  fully_specified_type . IDENTIFIER   (rule 111)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 113)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 114)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 115)
    single_declaration  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 116)

    IDENTIFIER	shift, and go to state 71

    $default	reduce using rule 110 (single_declaration)



state 44

    fully_specified_type  ->  type_qualifier . type_specifier   (rule 119)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35

    type_specifier	go to state 72
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 45

    fully_specified_type  ->  type_specifier .   (rule 118)

    $default	reduce using rule 118 (fully_specified_type)



state 46

    type_specifier  ->  type_specifier_nonarray .   (rule 125)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 126)

    LEFT_BRACKET	shift, and go to state 73

    $default	reduce using rule 125 (type_specifier)



state 47

    type_specifier_nonarray  ->  type_specifier_nonarray_no_prec .   (rule 127)

    $default	reduce using rule 127 (type_specifier_nonarray)



state 48

    type_specifier_nonarray  ->  precision_qualifier . type_specifier_nonarray_no_prec   (rule 128)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 35

    type_specifier_nonarray_no_prec	go to state 74
    struct_specifier	go to state 49



state 49

    type_specifier_nonarray_no_prec  ->  struct_specifier .   (rule 153)

    $default	reduce using rule 153 (type_specifier_nonarray_no_prec)



state 50

    translation_unit  ->  translation_unit . external_declaration   (rule 211)

    $   	go to state 328
    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    TYPE_NAME	shift, and go to state 35

    declaration	go to state 36
    function_prototype	go to state 37
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 45
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    external_declaration	go to state 75
    function_definition	go to state 52



state 51

    translation_unit  ->  external_declaration .   (rule 210)

    $default	reduce using rule 210 (translation_unit)



state 52

    external_declaration  ->  function_definition .   (rule 212)

    $default	reduce using rule 212 (external_declaration)



state 53

    struct_specifier  ->  STRUCT IDENTIFIER . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 158)

    LEFT_BRACE	shift, and go to state 76



state 54

    struct_specifier  ->  STRUCT LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 159)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35

    type_specifier	go to state 77
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    struct_declaration_list	go to state 78
    struct_declaration	go to state 79



state 55

    type_qualifier  ->  INVARIANT VARYING .   (rule 123)

    $default	reduce using rule 123 (type_qualifier)



state 56

    single_declaration  ->  INVARIANT IDENTIFIER .   (rule 117)

    $default	reduce using rule 117 (single_declaration)



state 57

    declaration  ->  PRECISION precision_qualifier . type_specifier_nonarray_no_prec SEMICOLON   (rule 85)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 35

    type_specifier_nonarray_no_prec	go to state 80
    struct_specifier	go to state 49



state 58

    declaration  ->  function_prototype SEMICOLON .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 59

    function_definition  ->  function_prototype @6 . compound_statement_no_new_scope   (rule 215)

    LEFT_BRACE	shift, and go to state 81

    compound_statement_no_new_scope	go to state 82



state 60

    function_prototype  ->  function_declarator RIGHT_PAREN .   (rule 86)

    $default	reduce using rule 86 (function_prototype)



state 61

    function_header_with_parameters  ->  function_header_with_parameters COMMA . parameter_declaration   (rule 90)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 62
    OUT_QUAL	shift, and go to state 63
    INOUT_QUAL	shift, and go to state 64
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    INVARIANT	shift, and go to state 65

    $default	reduce using rule 98 (parameter_qualifier)

    parameter_declaration	go to state 83
    parameter_qualifier	go to state 67
    type_qualifier	go to state 68



state 62

    parameter_qualifier  ->  IN_QUAL .   (rule 99)

    $default	reduce using rule 99 (parameter_qualifier)



state 63

    parameter_qualifier  ->  OUT_QUAL .   (rule 100)

    $default	reduce using rule 100 (parameter_qualifier)



state 64

    parameter_qualifier  ->  INOUT_QUAL .   (rule 101)

    $default	reduce using rule 101 (parameter_qualifier)



state 65

    type_qualifier  ->  INVARIANT . VARYING   (rule 123)

    VARYING	shift, and go to state 55



state 66

    function_header_with_parameters  ->  function_header parameter_declaration .   (rule 89)

    $default	reduce using rule 89 (function_header_with_parameters)



state 67

    parameter_declaration  ->  parameter_qualifier . parameter_declarator   (rule 95)
    parameter_declaration  ->  parameter_qualifier . parameter_type_specifier   (rule 97)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35

    parameter_declarator	go to state 84
    parameter_type_specifier	go to state 85
    type_specifier	go to state 86
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 68

    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_declarator   (rule 94)
    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_type_specifier   (rule 96)

    IN_QUAL	shift, and go to state 62
    OUT_QUAL	shift, and go to state 63
    INOUT_QUAL	shift, and go to state 64

    $default	reduce using rule 98 (parameter_qualifier)

    parameter_qualifier	go to state 87



state 69

    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 108)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER EQUAL initializer   (rule 109)

    IDENTIFIER	shift, and go to state 88



state 70

    declaration  ->  init_declarator_list SEMICOLON .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 71

    function_header  ->  fully_specified_type IDENTIFIER . LEFT_PAREN   (rule 91)
    single_declaration  ->  fully_specified_type IDENTIFIER .   (rule 111)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 114)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 115)
    single_declaration  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 116)

    LEFT_PAREN	shift, and go to state 89
    LEFT_BRACKET	shift, and go to state 90
    EQUAL	shift, and go to state 91

    $default	reduce using rule 111 (single_declaration)



state 72

    fully_specified_type  ->  type_qualifier type_specifier .   (rule 119)

    $default	reduce using rule 119 (fully_specified_type)



state 73

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 126)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 127
    constant_expression	go to state 128
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 74

    type_specifier_nonarray  ->  precision_qualifier type_specifier_nonarray_no_prec .   (rule 128)

    $default	reduce using rule 128 (type_specifier_nonarray)



state 75

    translation_unit  ->  translation_unit external_declaration .   (rule 211)

    $default	reduce using rule 211 (translation_unit)



state 76

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 158)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35

    type_specifier	go to state 77
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    struct_declaration_list	go to state 130
    struct_declaration	go to state 79



state 77

    struct_declaration  ->  type_specifier . struct_declarator_list SEMICOLON   (rule 162)

    IDENTIFIER	shift, and go to state 131

    struct_declarator_list	go to state 132
    struct_declarator	go to state 133



state 78

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 159)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 161)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35
    RIGHT_BRACE	shift, and go to state 134

    type_specifier	go to state 77
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    struct_declaration	go to state 135



state 79

    struct_declaration_list  ->  struct_declaration .   (rule 160)

    $default	reduce using rule 160 (struct_declaration_list)



state 80

    declaration  ->  PRECISION precision_qualifier type_specifier_nonarray_no_prec . SEMICOLON   (rule 85)

    SEMICOLON	shift, and go to state 136



state 81

    compound_statement_no_new_scope  ->  LEFT_BRACE . RIGHT_BRACE   (rule 182)
    compound_statement_no_new_scope  ->  LEFT_BRACE . statement_list RIGHT_BRACE   (rule 183)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    RIGHT_BRACE	shift, and go to state 146
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 156
    simple_statement	go to state 157
    compound_statement	go to state 158
    statement_list	go to state 159
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 82

    function_definition  ->  function_prototype @6 compound_statement_no_new_scope .   (rule 215)

    $default	reduce using rule 215 (function_definition)



state 83

    function_header_with_parameters  ->  function_header_with_parameters COMMA parameter_declaration .   (rule 90)

    $default	reduce using rule 90 (function_header_with_parameters)



state 84

    parameter_declaration  ->  parameter_qualifier parameter_declarator .   (rule 95)

    $default	reduce using rule 95 (parameter_declaration)



state 85

    parameter_declaration  ->  parameter_qualifier parameter_type_specifier .   (rule 97)

    $default	reduce using rule 97 (parameter_declaration)



state 86

    parameter_declarator  ->  type_specifier . IDENTIFIER   (rule 92)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 93)
    parameter_type_specifier  ->  type_specifier .   (rule 102)

    IDENTIFIER	shift, and go to state 164

    $default	reduce using rule 102 (parameter_type_specifier)



state 87

    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_declarator   (rule 94)
    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_type_specifier   (rule 96)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35

    parameter_declarator	go to state 165
    parameter_type_specifier	go to state 166
    type_specifier	go to state 86
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 88

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER .   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 108)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . EQUAL initializer   (rule 109)

    LEFT_BRACKET	shift, and go to state 167
    EQUAL	shift, and go to state 168

    $default	reduce using rule 104 (init_declarator_list)



state 89

    function_header  ->  fully_specified_type IDENTIFIER LEFT_PAREN .   (rule 91)

    $default	reduce using rule 91 (function_header)



state 90

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET EQUAL initializer   (rule 114)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET EQUAL initializer   (rule 115)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    RIGHT_BRACKET	shift, and go to state 169
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 127
    constant_expression	go to state 170
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 91

    single_declaration  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 116)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 172



state 92

    variable_identifier  ->  IDENTIFIER .   (rule 1)
    function_identifier  ->  IDENTIFIER .   (rule 25)

    LEFT_PAREN	reduce using rule 25 (function_identifier)
    $default	reduce using rule 1 (variable_identifier)



state 93

    primary_expression  ->  FLOATCONSTANT .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 94

    primary_expression  ->  INTCONSTANT .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 95

    primary_expression  ->  BOOLCONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 96

    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    $default	reduce using rule 26 (function_identifier)



state 97

    unary_expression  ->  INC_OP . unary_expression   (rule 28)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 173
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 98

    unary_expression  ->  DEC_OP . unary_expression   (rule 29)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 174
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 99

    primary_expression  ->  LEFT_PAREN . expression RIGHT_PAREN   (rule 6)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 175
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 100

    unary_operator  ->  BANG .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 101

    unary_operator  ->  DASH .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 102

    unary_operator  ->  TILDE .   (rule 34)

    $default	reduce using rule 34 (unary_operator)



state 103

    unary_operator  ->  PLUS .   (rule 31)

    $default	reduce using rule 31 (unary_operator)



state 104

    primary_expression  ->  variable_identifier .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 105

    postfix_expression  ->  primary_expression .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 106

    postfix_expression  ->  postfix_expression . LEFT_BRACKET integer_expression RIGHT_BRACKET   (rule 8)
    postfix_expression  ->  postfix_expression . DOT FIELD_SELECTION   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    function_call_or_method  ->  postfix_expression . DOT function_call_generic   (rule 16)
    unary_expression  ->  postfix_expression .   (rule 27)

    INC_OP	shift, and go to state 176
    DEC_OP	shift, and go to state 177
    LEFT_BRACKET	shift, and go to state 178
    DOT 	shift, and go to state 179

    $default	reduce using rule 27 (unary_expression)



state 107

    postfix_expression  ->  function_call .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 108

    function_call  ->  function_call_or_method .   (rule 14)

    $default	reduce using rule 14 (function_call)



state 109

    function_call_or_method  ->  function_call_generic .   (rule 15)

    $default	reduce using rule 15 (function_call_or_method)



state 110

    function_call_generic  ->  function_call_header_no_parameters . RIGHT_PAREN   (rule 18)

    RIGHT_PAREN	shift, and go to state 180



state 111

    function_call_generic  ->  function_call_header_with_parameters . RIGHT_PAREN   (rule 17)
    function_call_header_with_parameters  ->  function_call_header_with_parameters . COMMA assignment_expression   (rule 22)

    RIGHT_PAREN	shift, and go to state 181
    COMMA	shift, and go to state 182



state 112

    function_call_header_no_parameters  ->  function_call_header . VOID_TYPE   (rule 19)
    function_call_header_no_parameters  ->  function_call_header .   (rule 20)
    function_call_header_with_parameters  ->  function_call_header . assignment_expression   (rule 21)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 183
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    $default	reduce using rule 20 (function_call_header_no_parameters)

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 184
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 113

    function_call_header  ->  function_identifier . LEFT_PAREN   (rule 23)

    LEFT_PAREN	shift, and go to state 185



state 114

    multiplicative_expression  ->  unary_expression .   (rule 35)

    $default	reduce using rule 35 (multiplicative_expression)



state 115

    unary_expression  ->  unary_operator . unary_expression   (rule 30)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 186
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 116

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  multiplicative_expression .   (rule 39)

    STAR	shift, and go to state 187
    SLASH	shift, and go to state 188
    PERCENT	shift, and go to state 189

    $default	reduce using rule 39 (additive_expression)



state 117

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  additive_expression .   (rule 42)

    DASH	shift, and go to state 190
    PLUS	shift, and go to state 191

    $default	reduce using rule 42 (shift_expression)



state 118

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  shift_expression .   (rule 45)

    LEFT_OP	shift, and go to state 192
    RIGHT_OP	shift, and go to state 193

    $default	reduce using rule 45 (relational_expression)



state 119

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  relational_expression .   (rule 50)

    LE_OP	shift, and go to state 194
    GE_OP	shift, and go to state 195
    LEFT_ANGLE	shift, and go to state 196
    RIGHT_ANGLE	shift, and go to state 197

    $default	reduce using rule 50 (equality_expression)



state 120

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 51)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 52)
    and_expression  ->  equality_expression .   (rule 53)

    EQ_OP	shift, and go to state 198
    NE_OP	shift, and go to state 199

    $default	reduce using rule 53 (and_expression)



state 121

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 54)
    exclusive_or_expression  ->  and_expression .   (rule 55)

    AMPERSAND	shift, and go to state 200

    $default	reduce using rule 55 (exclusive_or_expression)



state 122

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 56)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 57)

    CARET	shift, and go to state 201

    $default	reduce using rule 57 (inclusive_or_expression)



state 123

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 58)
    logical_and_expression  ->  inclusive_or_expression .   (rule 59)

    VERTICAL_BAR	shift, and go to state 202

    $default	reduce using rule 59 (logical_and_expression)



state 124

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 60)
    logical_xor_expression  ->  logical_and_expression .   (rule 61)

    AND_OP	shift, and go to state 203

    $default	reduce using rule 61 (logical_xor_expression)



state 125

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 62)
    logical_or_expression  ->  logical_xor_expression .   (rule 63)

    XOR_OP	shift, and go to state 204

    $default	reduce using rule 63 (logical_or_expression)



state 126

    logical_or_expression  ->  logical_or_expression . OR_OP logical_xor_expression   (rule 64)
    conditional_expression  ->  logical_or_expression .   (rule 65)
    conditional_expression  ->  logical_or_expression . QUESTION expression COLON assignment_expression   (rule 66)

    OR_OP	shift, and go to state 205
    QUESTION	shift, and go to state 206

    $default	reduce using rule 65 (conditional_expression)



state 127

    constant_expression  ->  conditional_expression .   (rule 82)

    $default	reduce using rule 82 (constant_expression)



state 128

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 126)

    RIGHT_BRACKET	shift, and go to state 207



state 129

    function_identifier  ->  type_specifier .   (rule 24)

    $default	reduce using rule 24 (function_identifier)



state 130

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 158)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 161)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    TYPE_NAME	shift, and go to state 35
    RIGHT_BRACE	shift, and go to state 208

    type_specifier	go to state 77
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    struct_declaration	go to state 135



state 131

    struct_declarator  ->  IDENTIFIER .   (rule 165)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 166)

    LEFT_BRACKET	shift, and go to state 209

    $default	reduce using rule 165 (struct_declarator)



state 132

    struct_declaration  ->  type_specifier struct_declarator_list . SEMICOLON   (rule 162)
    struct_declarator_list  ->  struct_declarator_list . COMMA struct_declarator   (rule 164)

    COMMA	shift, and go to state 210
    SEMICOLON	shift, and go to state 211



state 133

    struct_declarator_list  ->  struct_declarator .   (rule 163)

    $default	reduce using rule 163 (struct_declarator_list)



state 134

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 159)

    $default	reduce using rule 159 (struct_specifier)



state 135

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 161)

    $default	reduce using rule 161 (struct_declaration_list)



state 136

    declaration  ->  PRECISION precision_qualifier type_specifier_nonarray_no_prec SEMICOLON .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 137

    jump_statement  ->  BREAK . SEMICOLON   (rule 206)

    SEMICOLON	shift, and go to state 212



state 138

    jump_statement  ->  CONTINUE . SEMICOLON   (rule 205)

    SEMICOLON	shift, and go to state 213



state 139

    iteration_statement  ->  DO . @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 196)

    $default	reduce using rule 195 (@4)

    @4  	go to state 214



state 140

    iteration_statement  ->  FOR . LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 198)

    LEFT_PAREN	shift, and go to state 215



state 141

    selection_statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN selection_rest_statement   (rule 188)

    LEFT_PAREN	shift, and go to state 216



state 142

    jump_statement  ->  DISCARD . SEMICOLON   (rule 209)

    SEMICOLON	shift, and go to state 217



state 143

    jump_statement  ->  RETURN . SEMICOLON   (rule 207)
    jump_statement  ->  RETURN . expression SEMICOLON   (rule 208)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    SEMICOLON	shift, and go to state 218
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 219
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 144

    iteration_statement  ->  WHILE . LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope   (rule 194)

    LEFT_PAREN	shift, and go to state 220



state 145

    compound_statement  ->  LEFT_BRACE . RIGHT_BRACE   (rule 176)
    compound_statement  ->  LEFT_BRACE . @1 statement_list @2 RIGHT_BRACE   (rule 179)

    RIGHT_BRACE	shift, and go to state 221

    $default	reduce using rule 177 (@1)

    @1  	go to state 222



state 146

    compound_statement_no_new_scope  ->  LEFT_BRACE RIGHT_BRACE .   (rule 182)

    $default	reduce using rule 182 (compound_statement_no_new_scope)



state 147

    expression_statement  ->  SEMICOLON .   (rule 186)

    $default	reduce using rule 186 (expression_statement)



state 148

    multiplicative_expression  ->  unary_expression .   (rule 35)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 68)

    MUL_ASSIGN	shift, and go to state 223
    DIV_ASSIGN	shift, and go to state 224
    ADD_ASSIGN	shift, and go to state 225
    MOD_ASSIGN	shift, and go to state 226
    LEFT_ASSIGN	shift, and go to state 227
    RIGHT_ASSIGN	shift, and go to state 228
    AND_ASSIGN	shift, and go to state 229
    XOR_ASSIGN	shift, and go to state 230
    OR_ASSIGN	shift, and go to state 231
    SUB_ASSIGN	shift, and go to state 232
    EQUAL	shift, and go to state 233

    $default	reduce using rule 35 (multiplicative_expression)

    assignment_operator	go to state 234



state 149

    assignment_expression  ->  conditional_expression .   (rule 67)

    $default	reduce using rule 67 (assignment_expression)



state 150

    expression  ->  assignment_expression .   (rule 80)

    $default	reduce using rule 80 (expression)



state 151

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    expression_statement  ->  expression . SEMICOLON   (rule 187)

    COMMA	shift, and go to state 235
    SEMICOLON	shift, and go to state 236



state 152

    declaration_statement  ->  declaration .   (rule 168)

    $default	reduce using rule 168 (declaration_statement)



state 153

    declaration  ->  function_prototype . SEMICOLON   (rule 83)

    SEMICOLON	shift, and go to state 58



state 154

    function_identifier  ->  type_specifier .   (rule 24)
    fully_specified_type  ->  type_specifier .   (rule 118)

    LEFT_PAREN	reduce using rule 24 (function_identifier)
    $default	reduce using rule 118 (fully_specified_type)



state 155

    simple_statement  ->  declaration_statement .   (rule 171)

    $default	reduce using rule 171 (simple_statement)



state 156

    statement_list  ->  statement .   (rule 184)

    $default	reduce using rule 184 (statement_list)



state 157

    statement  ->  simple_statement .   (rule 170)

    $default	reduce using rule 170 (statement)



state 158

    statement  ->  compound_statement .   (rule 169)

    $default	reduce using rule 169 (statement)



state 159

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list . RIGHT_BRACE   (rule 183)
    statement_list  ->  statement_list . statement   (rule 185)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    RIGHT_BRACE	shift, and go to state 237
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 238
    simple_statement	go to state 157
    compound_statement	go to state 158
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 160

    simple_statement  ->  expression_statement .   (rule 172)

    $default	reduce using rule 172 (simple_statement)



state 161

    simple_statement  ->  selection_statement .   (rule 173)

    $default	reduce using rule 173 (simple_statement)



state 162

    simple_statement  ->  iteration_statement .   (rule 174)

    $default	reduce using rule 174 (simple_statement)



state 163

    simple_statement  ->  jump_statement .   (rule 175)

    $default	reduce using rule 175 (simple_statement)



state 164

    parameter_declarator  ->  type_specifier IDENTIFIER .   (rule 92)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 93)

    LEFT_BRACKET	shift, and go to state 239

    $default	reduce using rule 92 (parameter_declarator)



state 165

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_declarator .   (rule 94)

    $default	reduce using rule 94 (parameter_declaration)



state 166

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_type_specifier .   (rule 96)

    $default	reduce using rule 96 (parameter_declaration)



state 167

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET EQUAL initializer   (rule 108)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    RIGHT_BRACKET	shift, and go to state 240
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 127
    constant_expression	go to state 241
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 168

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER EQUAL . initializer   (rule 109)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 242



state 169

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET .   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . EQUAL initializer   (rule 114)

    EQUAL	shift, and go to state 243

    $default	reduce using rule 112 (single_declaration)



state 170

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET EQUAL initializer   (rule 115)

    RIGHT_BRACKET	shift, and go to state 244



state 171

    initializer  ->  assignment_expression .   (rule 167)

    $default	reduce using rule 167 (initializer)



state 172

    single_declaration  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 116)

    $default	reduce using rule 116 (single_declaration)



state 173

    unary_expression  ->  INC_OP unary_expression .   (rule 28)

    $default	reduce using rule 28 (unary_expression)



state 174

    unary_expression  ->  DEC_OP unary_expression .   (rule 29)

    $default	reduce using rule 29 (unary_expression)



state 175

    primary_expression  ->  LEFT_PAREN expression . RIGHT_PAREN   (rule 6)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    RIGHT_PAREN	shift, and go to state 245
    COMMA	shift, and go to state 235



state 176

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 177

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 178

    postfix_expression  ->  postfix_expression LEFT_BRACKET . integer_expression RIGHT_BRACKET   (rule 8)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    integer_expression	go to state 246
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 247
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 179

    postfix_expression  ->  postfix_expression DOT . FIELD_SELECTION   (rule 10)
    function_call_or_method  ->  postfix_expression DOT . function_call_generic   (rule 16)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 248
    TYPE_NAME	shift, and go to state 35
    FIELD_SELECTION	shift, and go to state 249

    function_call_generic	go to state 250
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 180

    function_call_generic  ->  function_call_header_no_parameters RIGHT_PAREN .   (rule 18)

    $default	reduce using rule 18 (function_call_generic)



state 181

    function_call_generic  ->  function_call_header_with_parameters RIGHT_PAREN .   (rule 17)

    $default	reduce using rule 17 (function_call_generic)



state 182

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA . assignment_expression   (rule 22)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 251
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 183

    function_call_header_no_parameters  ->  function_call_header VOID_TYPE .   (rule 19)
    type_specifier_nonarray_no_prec  ->  VOID_TYPE .   (rule 129)

    RIGHT_PAREN	reduce using rule 19 (function_call_header_no_parameters)
    $default	reduce using rule 129 (type_specifier_nonarray_no_prec)



state 184

    function_call_header_with_parameters  ->  function_call_header assignment_expression .   (rule 21)

    $default	reduce using rule 21 (function_call_header_with_parameters)



state 185

    function_call_header  ->  function_identifier LEFT_PAREN .   (rule 23)

    $default	reduce using rule 23 (function_call_header)



state 186

    unary_expression  ->  unary_operator unary_expression .   (rule 30)

    $default	reduce using rule 30 (unary_expression)



state 187

    multiplicative_expression  ->  multiplicative_expression STAR . unary_expression   (rule 36)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 252
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 188

    multiplicative_expression  ->  multiplicative_expression SLASH . unary_expression   (rule 37)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 253
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 189

    multiplicative_expression  ->  multiplicative_expression PERCENT . unary_expression   (rule 38)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 254
    unary_operator	go to state 115
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 190

    additive_expression  ->  additive_expression DASH . multiplicative_expression   (rule 41)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 255
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 191

    additive_expression  ->  additive_expression PLUS . multiplicative_expression   (rule 40)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 256
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 192

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 43)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 257
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 193

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 44)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 258
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 194

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 48)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 259
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 195

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 49)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 260
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 196

    relational_expression  ->  relational_expression LEFT_ANGLE . shift_expression   (rule 46)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 261
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 197

    relational_expression  ->  relational_expression RIGHT_ANGLE . shift_expression   (rule 47)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 262
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 198

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 51)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 263
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 199

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 52)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 264
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 200

    and_expression  ->  and_expression AMPERSAND . equality_expression   (rule 54)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 265
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 201

    exclusive_or_expression  ->  exclusive_or_expression CARET . and_expression   (rule 56)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 266
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 202

    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR . exclusive_or_expression   (rule 58)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 267
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 203

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 60)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 268
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 204

    logical_xor_expression  ->  logical_xor_expression XOR_OP . logical_and_expression   (rule 62)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 269
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 205

    logical_or_expression  ->  logical_or_expression OR_OP . logical_xor_expression   (rule 64)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 270
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 206

    conditional_expression  ->  logical_or_expression QUESTION . expression COLON assignment_expression   (rule 66)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 271
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 207

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 126)

    $default	reduce using rule 126 (type_specifier)



state 208

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 158)

    $default	reduce using rule 158 (struct_specifier)



state 209

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 166)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 127
    constant_expression	go to state 272
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 210

    struct_declarator_list  ->  struct_declarator_list COMMA . struct_declarator   (rule 164)

    IDENTIFIER	shift, and go to state 131

    struct_declarator	go to state 273



state 211

    struct_declaration  ->  type_specifier struct_declarator_list SEMICOLON .   (rule 162)

    $default	reduce using rule 162 (struct_declaration)



state 212

    jump_statement  ->  BREAK SEMICOLON .   (rule 206)

    $default	reduce using rule 206 (jump_statement)



state 213

    jump_statement  ->  CONTINUE SEMICOLON .   (rule 205)

    $default	reduce using rule 205 (jump_statement)



state 214

    iteration_statement  ->  DO @4 . statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 196)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 274
    simple_statement	go to state 157
    compound_statement	go to state 158
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 215

    iteration_statement  ->  FOR LEFT_PAREN . @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 198)

    $default	reduce using rule 197 (@5)

    @5  	go to state 275



state 216

    selection_statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN selection_rest_statement   (rule 188)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 276
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 217

    jump_statement  ->  DISCARD SEMICOLON .   (rule 209)

    $default	reduce using rule 209 (jump_statement)



state 218

    jump_statement  ->  RETURN SEMICOLON .   (rule 207)

    $default	reduce using rule 207 (jump_statement)



state 219

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    jump_statement  ->  RETURN expression . SEMICOLON   (rule 208)

    COMMA	shift, and go to state 235
    SEMICOLON	shift, and go to state 277



state 220

    iteration_statement  ->  WHILE LEFT_PAREN . @3 condition RIGHT_PAREN statement_no_new_scope   (rule 194)

    $default	reduce using rule 193 (@3)

    @3  	go to state 278



state 221

    compound_statement  ->  LEFT_BRACE RIGHT_BRACE .   (rule 176)

    $default	reduce using rule 176 (compound_statement)



state 222

    compound_statement  ->  LEFT_BRACE @1 . statement_list @2 RIGHT_BRACE   (rule 179)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 156
    simple_statement	go to state 157
    compound_statement	go to state 158
    statement_list	go to state 279
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 223

    assignment_operator  ->  MUL_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 224

    assignment_operator  ->  DIV_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 225

    assignment_operator  ->  ADD_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 226

    assignment_operator  ->  MOD_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 227

    assignment_operator  ->  LEFT_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 228

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 229

    assignment_operator  ->  AND_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 230

    assignment_operator  ->  XOR_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 231

    assignment_operator  ->  OR_ASSIGN .   (rule 79)

    $default	reduce using rule 79 (assignment_operator)



state 232

    assignment_operator  ->  SUB_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 233

    assignment_operator  ->  EQUAL .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 234

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 68)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 280
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 235

    expression  ->  expression COMMA . assignment_expression   (rule 81)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 281
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 236

    expression_statement  ->  expression SEMICOLON .   (rule 187)

    $default	reduce using rule 187 (expression_statement)



state 237

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list RIGHT_BRACE .   (rule 183)

    $default	reduce using rule 183 (compound_statement_no_new_scope)



state 238

    statement_list  ->  statement_list statement .   (rule 185)

    $default	reduce using rule 185 (statement_list)



state 239

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 93)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 114
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 127
    constant_expression	go to state 282
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 240

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET .   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . EQUAL initializer   (rule 107)

    EQUAL	shift, and go to state 283

    $default	reduce using rule 105 (init_declarator_list)



state 241

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET EQUAL initializer   (rule 108)

    RIGHT_BRACKET	shift, and go to state 284



state 242

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER EQUAL initializer .   (rule 109)

    $default	reduce using rule 109 (init_declarator_list)



state 243

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL . initializer   (rule 114)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 285



state 244

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . EQUAL initializer   (rule 115)

    EQUAL	shift, and go to state 286

    $default	reduce using rule 113 (single_declaration)



state 245

    primary_expression  ->  LEFT_PAREN expression RIGHT_PAREN .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 246

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression . RIGHT_BRACKET   (rule 8)

    RIGHT_BRACKET	shift, and go to state 287



state 247

    integer_expression  ->  expression .   (rule 13)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    COMMA	shift, and go to state 235

    $default	reduce using rule 13 (integer_expression)



state 248

    function_identifier  ->  IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (function_identifier)



state 249

    postfix_expression  ->  postfix_expression DOT FIELD_SELECTION .   (rule 10)
    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    LEFT_PAREN	reduce using rule 26 (function_identifier)
    $default	reduce using rule 10 (postfix_expression)



state 250

    function_call_or_method  ->  postfix_expression DOT function_call_generic .   (rule 16)

    $default	reduce using rule 16 (function_call_or_method)



state 251

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA assignment_expression .   (rule 22)

    $default	reduce using rule 22 (function_call_header_with_parameters)



state 252

    multiplicative_expression  ->  multiplicative_expression STAR unary_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 253

    multiplicative_expression  ->  multiplicative_expression SLASH unary_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 254

    multiplicative_expression  ->  multiplicative_expression PERCENT unary_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 255

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  additive_expression DASH multiplicative_expression .   (rule 41)

    STAR	shift, and go to state 187
    SLASH	shift, and go to state 188
    PERCENT	shift, and go to state 189

    $default	reduce using rule 41 (additive_expression)



state 256

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  additive_expression PLUS multiplicative_expression .   (rule 40)

    STAR	shift, and go to state 187
    SLASH	shift, and go to state 188
    PERCENT	shift, and go to state 189

    $default	reduce using rule 40 (additive_expression)



state 257

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 43)

    DASH	shift, and go to state 190
    PLUS	shift, and go to state 191

    $default	reduce using rule 43 (shift_expression)



state 258

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 44)

    DASH	shift, and go to state 190
    PLUS	shift, and go to state 191

    $default	reduce using rule 44 (shift_expression)



state 259

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 192
    RIGHT_OP	shift, and go to state 193

    $default	reduce using rule 48 (relational_expression)



state 260

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 192
    RIGHT_OP	shift, and go to state 193

    $default	reduce using rule 49 (relational_expression)



state 261

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression LEFT_ANGLE shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 192
    RIGHT_OP	shift, and go to state 193

    $default	reduce using rule 46 (relational_expression)



state 262

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression RIGHT_ANGLE shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 192
    RIGHT_OP	shift, and go to state 193

    $default	reduce using rule 47 (relational_expression)



state 263

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 51)

    LE_OP	shift, and go to state 194
    GE_OP	shift, and go to state 195
    LEFT_ANGLE	shift, and go to state 196
    RIGHT_ANGLE	shift, and go to state 197

    $default	reduce using rule 51 (equality_expression)



state 264

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 194
    GE_OP	shift, and go to state 195
    LEFT_ANGLE	shift, and go to state 196
    RIGHT_ANGLE	shift, and go to state 197

    $default	reduce using rule 52 (equality_expression)



state 265

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 51)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 52)
    and_expression  ->  and_expression AMPERSAND equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 198
    NE_OP	shift, and go to state 199

    $default	reduce using rule 54 (and_expression)



state 266

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 54)
    exclusive_or_expression  ->  exclusive_or_expression CARET and_expression .   (rule 56)

    AMPERSAND	shift, and go to state 200

    $default	reduce using rule 56 (exclusive_or_expression)



state 267

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 56)
    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR exclusive_or_expression .   (rule 58)

    CARET	shift, and go to state 201

    $default	reduce using rule 58 (inclusive_or_expression)



state 268

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 58)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 60)

    VERTICAL_BAR	shift, and go to state 202

    $default	reduce using rule 60 (logical_and_expression)



state 269

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 60)
    logical_xor_expression  ->  logical_xor_expression XOR_OP logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 203

    $default	reduce using rule 62 (logical_xor_expression)



state 270

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 62)
    logical_or_expression  ->  logical_or_expression OR_OP logical_xor_expression .   (rule 64)

    XOR_OP	shift, and go to state 204

    $default	reduce using rule 64 (logical_or_expression)



state 271

    conditional_expression  ->  logical_or_expression QUESTION expression . COLON assignment_expression   (rule 66)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    COMMA	shift, and go to state 235
    COLON	shift, and go to state 288



state 272

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 166)

    RIGHT_BRACKET	shift, and go to state 289



state 273

    struct_declarator_list  ->  struct_declarator_list COMMA struct_declarator .   (rule 164)

    $default	reduce using rule 164 (struct_declarator_list)



state 274

    iteration_statement  ->  DO @4 statement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 196)

    WHILE	shift, and go to state 290



state 275

    iteration_statement  ->  FOR LEFT_PAREN @5 . for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 198)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 291
    expression_statement	go to state 292
    for_init_statement	go to state 293



state 276

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    selection_statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN selection_rest_statement   (rule 188)

    RIGHT_PAREN	shift, and go to state 294
    COMMA	shift, and go to state 235



state 277

    jump_statement  ->  RETURN expression SEMICOLON .   (rule 208)

    $default	reduce using rule 208 (jump_statement)



state 278

    iteration_statement  ->  WHILE LEFT_PAREN @3 . condition RIGHT_PAREN statement_no_new_scope   (rule 194)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 65
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 295
    fully_specified_type	go to state 296
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    condition	go to state 297



state 279

    compound_statement  ->  LEFT_BRACE @1 statement_list . @2 RIGHT_BRACE   (rule 179)
    statement_list  ->  statement_list . statement   (rule 185)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    $default	reduce using rule 178 (@2)

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 238
    simple_statement	go to state 157
    compound_statement	go to state 158
    @2  	go to state 298
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 280

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 68)

    $default	reduce using rule 68 (assignment_expression)



state 281

    expression  ->  expression COMMA assignment_expression .   (rule 81)

    $default	reduce using rule 81 (expression)



state 282

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 93)

    RIGHT_BRACKET	shift, and go to state 299



state 283

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL . initializer   (rule 107)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 300



state 284

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . EQUAL initializer   (rule 108)

    EQUAL	shift, and go to state 301

    $default	reduce using rule 106 (init_declarator_list)



state 285

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer .   (rule 114)

    $default	reduce using rule 114 (single_declaration)



state 286

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL . initializer   (rule 115)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 302



state 287

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 288

    conditional_expression  ->  logical_or_expression QUESTION expression COLON . assignment_expression   (rule 66)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 303
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 289

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 166)

    $default	reduce using rule 166 (struct_declarator)



state 290

    iteration_statement  ->  DO @4 statement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 196)

    LEFT_PAREN	shift, and go to state 304



state 291

    for_init_statement  ->  declaration_statement .   (rule 200)

    $default	reduce using rule 200 (for_init_statement)



state 292

    for_init_statement  ->  expression_statement .   (rule 199)

    $default	reduce using rule 199 (for_init_statement)



state 293

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement . for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 198)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 65
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    $default	reduce using rule 202 (conditionopt)

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 295
    fully_specified_type	go to state 296
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    condition	go to state 305
    conditionopt	go to state 306
    for_rest_statement	go to state 307



state 294

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . selection_rest_statement   (rule 188)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 308
    simple_statement	go to state 157
    compound_statement	go to state 158
    expression_statement	go to state 160
    selection_statement	go to state 161
    selection_rest_statement	go to state 309
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 295

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    condition  ->  expression .   (rule 191)

    COMMA	shift, and go to state 235

    $default	reduce using rule 191 (condition)



state 296

    condition  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 192)

    IDENTIFIER	shift, and go to state 310



state 297

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition . RIGHT_PAREN statement_no_new_scope   (rule 194)

    RIGHT_PAREN	shift, and go to state 311



state 298

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 . RIGHT_BRACE   (rule 179)

    RIGHT_BRACE	shift, and go to state 312



state 299

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 93)

    $default	reduce using rule 93 (parameter_declarator)



state 300

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer .   (rule 107)

    $default	reduce using rule 107 (init_declarator_list)



state 301

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL . initializer   (rule 108)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 313



state 302

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer .   (rule 115)

    $default	reduce using rule 115 (single_declaration)



state 303

    conditional_expression  ->  logical_or_expression QUESTION expression COLON assignment_expression .   (rule 66)

    $default	reduce using rule 66 (conditional_expression)



state 304

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMICOLON   (rule 196)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 314
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 305

    conditionopt  ->  condition .   (rule 201)

    $default	reduce using rule 201 (conditionopt)



state 306

    for_rest_statement  ->  conditionopt . SEMICOLON   (rule 203)
    for_rest_statement  ->  conditionopt . SEMICOLON expression   (rule 204)

    SEMICOLON	shift, and go to state 315



state 307

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement . RIGHT_PAREN statement_no_new_scope   (rule 198)

    RIGHT_PAREN	shift, and go to state 316



state 308

    selection_rest_statement  ->  statement . ELSE statement   (rule 189)
    selection_rest_statement  ->  statement .   (rule 190)

    ELSE	shift, and go to state 317

    ELSE	[reduce using rule 190 (selection_rest_statement)]
    $default	reduce using rule 190 (selection_rest_statement)



state 309

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement .   (rule 188)

    $default	reduce using rule 188 (selection_statement)



state 310

    condition  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 192)

    EQUAL	shift, and go to state 318



state 311

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN . statement_no_new_scope   (rule 194)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 81
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    simple_statement	go to state 319
    statement_no_new_scope	go to state 320
    compound_statement_no_new_scope	go to state 321
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 312

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 RIGHT_BRACE .   (rule 179)

    $default	reduce using rule 179 (compound_statement)



state 313

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer .   (rule 108)

    $default	reduce using rule 108 (init_declarator_list)



state 314

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMICOLON   (rule 196)

    RIGHT_PAREN	shift, and go to state 322
    COMMA	shift, and go to state 235



state 315

    for_rest_statement  ->  conditionopt SEMICOLON .   (rule 203)
    for_rest_statement  ->  conditionopt SEMICOLON . expression   (rule 204)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    $default	reduce using rule 203 (for_rest_statement)

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 323
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49



state 316

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN . statement_no_new_scope   (rule 198)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 81
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    simple_statement	go to state 319
    statement_no_new_scope	go to state 324
    compound_statement_no_new_scope	go to state 321
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 317

    selection_rest_statement  ->  statement ELSE . statement   (rule 189)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 137
    CONTINUE	shift, and go to state 138
    DO  	shift, and go to state 139
    FOR 	shift, and go to state 140
    IF  	shift, and go to state 141
    DISCARD	shift, and go to state 142
    RETURN	shift, and go to state 143
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 144
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    INVARIANT	shift, and go to state 33
    PRECISION	shift, and go to state 34
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    LEFT_BRACE	shift, and go to state 145
    SEMICOLON	shift, and go to state 147
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 150
    expression	go to state 151
    declaration	go to state 152
    function_prototype	go to state 153
    function_declarator	go to state 38
    function_header_with_parameters	go to state 39
    function_header	go to state 40
    init_declarator_list	go to state 41
    single_declaration	go to state 42
    fully_specified_type	go to state 43
    type_qualifier	go to state 44
    type_specifier	go to state 154
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    declaration_statement	go to state 155
    statement	go to state 325
    simple_statement	go to state 157
    compound_statement	go to state 158
    expression_statement	go to state 160
    selection_statement	go to state 161
    iteration_statement	go to state 162
    jump_statement	go to state 163



state 318

    condition  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 192)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    LOW_PRECISION	shift, and go to state 30
    MEDIUM_PRECISION	shift, and go to state 31
    HIGH_PRECISION	shift, and go to state 32
    IDENTIFIER	shift, and go to state 92
    TYPE_NAME	shift, and go to state 35
    FLOATCONSTANT	shift, and go to state 93
    INTCONSTANT	shift, and go to state 94
    BOOLCONSTANT	shift, and go to state 95
    FIELD_SELECTION	shift, and go to state 96
    INC_OP	shift, and go to state 97
    DEC_OP	shift, and go to state 98
    LEFT_PAREN	shift, and go to state 99
    BANG	shift, and go to state 100
    DASH	shift, and go to state 101
    TILDE	shift, and go to state 102
    PLUS	shift, and go to state 103

    variable_identifier	go to state 104
    primary_expression	go to state 105
    postfix_expression	go to state 106
    function_call	go to state 107
    function_call_or_method	go to state 108
    function_call_generic	go to state 109
    function_call_header_no_parameters	go to state 110
    function_call_header_with_parameters	go to state 111
    function_call_header	go to state 112
    function_identifier	go to state 113
    unary_expression	go to state 148
    unary_operator	go to state 115
    multiplicative_expression	go to state 116
    additive_expression	go to state 117
    shift_expression	go to state 118
    relational_expression	go to state 119
    equality_expression	go to state 120
    and_expression	go to state 121
    exclusive_or_expression	go to state 122
    inclusive_or_expression	go to state 123
    logical_and_expression	go to state 124
    logical_xor_expression	go to state 125
    logical_or_expression	go to state 126
    conditional_expression	go to state 149
    assignment_expression	go to state 171
    type_specifier	go to state 129
    type_specifier_nonarray	go to state 46
    type_specifier_nonarray_no_prec	go to state 47
    precision_qualifier	go to state 48
    struct_specifier	go to state 49
    initializer	go to state 326



state 319

    statement_no_new_scope  ->  simple_statement .   (rule 181)

    $default	reduce using rule 181 (statement_no_new_scope)



state 320

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope .   (rule 194)

    $default	reduce using rule 194 (iteration_statement)



state 321

    statement_no_new_scope  ->  compound_statement_no_new_scope .   (rule 180)

    $default	reduce using rule 180 (statement_no_new_scope)



state 322

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMICOLON   (rule 196)

    SEMICOLON	shift, and go to state 327



state 323

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    for_rest_statement  ->  conditionopt SEMICOLON expression .   (rule 204)

    COMMA	shift, and go to state 235

    $default	reduce using rule 204 (for_rest_statement)



state 324

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope .   (rule 198)

    $default	reduce using rule 198 (iteration_statement)



state 325

    selection_rest_statement  ->  statement ELSE statement .   (rule 189)

    $default	reduce using rule 189 (selection_rest_statement)



state 326

    condition  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 192)

    $default	reduce using rule 192 (condition)



state 327

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON .   (rule 196)

    $default	reduce using rule 196 (iteration_statement)



state 328

    $   	go to state 329



state 329

    $default	accept
